{"version":3,"file":"static/js/668.42421236.chunk.js","mappings":"4NA6CA,EAvCsB,SAAC,GAAkC,IAAhCA,EAA+B,EAA/BA,UAAWC,EAAoB,EAApBA,cAC5BC,GAAQC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,OAAOH,KAAxB,IACpBI,GAAgBH,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,OAAOA,MAAxB,IAElC,OACE,mBAAQE,UAAU,cAAlB,UACE,iBAAKA,UAAU,yBAAf,WACE,SAAC,KAAD,CAAMC,GAAG,IAAT,UACE,gBAAKD,UAAU,6BAAf,UACE,wBACE,4CAIN,iBAAKA,UAAU,yBAAf,UAC4B,IAAzBD,EAAcG,OAAe,MAC5B,iBAAKF,UAAU,8BAAf,WACE,oCACED,EAAcG,QAAU,GAA8B,IAAzBH,EAAcG,OACvCH,EAAcG,OAAS,wCACvBH,EAAcG,QAAU,EACxBH,EAAcG,OAAS,8CACvBH,EAAcG,OAAS,kCAL7B,QAOA,wEAAaP,EAAb,iBAGJ,SAAC,KAAD,CAAMM,GAAG,UAAT,UACE,gBAAKD,UAAU,gCAAf,UACE,gBAAKG,IAAKC,EAAAA,EAAQC,IAAI,gBAG1B,SAACC,EAAA,EAAD,CAAcb,UAAWA,EAAWC,cAAeA,WAK5D,E,uCCeD,EAjDaa,EAAAA,MAAW,WAAO,IAAD,gBACtBC,GAASC,EAAAA,EAAAA,MACTC,GAAWC,EAAAA,EAAAA,MACXC,GAAchB,EAAAA,EAAAA,KAAY,SAACC,GAAD,uBAC9BA,EAAMgB,QAAQA,QAAQC,gBADQ,aAC9B,EAAgCC,QAAO,SAACC,GAAD,OAAWA,EAAKC,MAAQT,EAAOS,EAA/B,GADT,IAahC,IATAC,EAAAA,EAAAA,YAAU,WACRR,GAASS,EAAAA,EAAAA,MACV,GAAE,CAACT,KAEJQ,EAAAA,EAAAA,YAAU,WACRR,GAASU,EAAAA,EAAAA,KAAcZ,EAAOS,IAE/B,GAAE,IAECL,EACF,OACE,iBAAKZ,UAAU,OAAf,WACE,gBACEG,IACE,UAAAS,EAAY,UAAZ,SAAgBS,WAAhB,UAA6BT,EAAY,UAAzC,aAA6B,EAAgBS,WAAaC,EAE5DjB,IAAI,MAEN,iBAAKL,UAAU,aAAf,WACE,eAAIA,UAAU,aAAd,mBAA4BY,EAAY,UAAxC,aAA4B,EAAgBW,QAC5C,cAAGvB,UAAU,oBAAb,mBAAkCY,EAAY,UAA9C,aAAkC,EAAgBY,eAClD,gBAAKxB,UAAU,mBAAf,UACE,iBAAKA,UAAU,mBAAf,WACE,0BACE,kBAAMA,UAAU,yBAAhB,oBACGY,EAAY,UADf,aACG,EAAgBjB,MADnB,gBAGA,iBAAMK,UAAU,0BAAhB,SACyC,KAAtC,UAAAY,EAAY,UAAZ,eAAgBa,WAAWvB,QAA3B,oBACMU,EAAY,UADlB,aACM,EAAgBa,WADtB,gCAEMb,EAAY,UAFlB,aAEM,EAAgBa,WAFtB,wBAKL,SAACC,EAAA,EAAD,cAOb,IC3CD,EAR0BnB,EAAAA,MAAW,YAAmC,IAAhCd,EAA+B,EAA/BA,UAAWC,EAAoB,EAApBA,cACjD,OACE,iBAAKM,UAAU,UAAf,WACE,SAAC,EAAD,CAAeP,UAAWA,EAAWC,cAAeA,KACpD,SAAC,EAAD,MAGL,G","sources":["Components/Product/ProductHeader/ProductHeader.jsx","Components/Product/Card/Card.jsx","Components/Product/InsideProductCard.jsx"],"sourcesContent":["import \"./ProductHeader.scss\";\nimport Basket from \"../../../img/Header/Vector.svg\";\nimport { Link } from \"react-router-dom\";\nimport LogoutButton from \"../../LogoutButton/LogoutButton\";\nimport { useSelector } from \"react-redux\";\n\nconst ProductHeader = ({ userEmail, setLoggedData }) => {\n  const price = useSelector((state) => state.basket.price);\n  const productAmount = useSelector((state) => state.basket.basket);\n\n  return (\n    <header className=\"header-card\">\n      <div className=\"header__header-wrapper\">\n        <Link to=\"/\">\n          <div className=\"basket-header__back-button\">\n            <p>\n              <span>←</span>\n            </p>\n          </div>\n        </Link>\n        <div className=\"header__product-basket\">\n          {productAmount.length === 0 ? null : (\n            <div className=\"header__product-basket-text\">\n              <span>{`${\n                productAmount.length <= 4 && productAmount.length !== 1\n                  ? productAmount.length + \" товара\"\n                  : productAmount.length >= 5\n                  ? productAmount.length + \" товаров\"\n                  : productAmount.length + \" товар\"\n              } `}</span>\n              <p>на сумму {price} ₽</p>\n            </div>\n          )}\n          <Link to=\"/basket\">\n            <div className=\"header__product-basket-button\">\n              <img src={Basket} alt=\"basket\" />\n            </div>\n          </Link>\n          <LogoutButton userEmail={userEmail} setLoggedData={setLoggedData} />\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default ProductHeader;\n","import \"./Card.scss\";\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getProducts, setProductId } from \"../../../Slices/productSlice\";\nimport OrderButton from \"../../OrderButton/OrderButton\";\nimport Emptyimg from \"../../../img/Main/empty-img.png\";\n\nconst Card = React.memo(() => {\n  const params = useParams();\n  const dispatch = useDispatch(); // хук получения и вызова метода dispatch в редьюсере\n  const productInfo = useSelector((state) =>\n    state.product.product.menuList?.filter((item) => +item.id === +params.id)\n  ); // хук получения стэйт из стора\n\n  useEffect(() => {\n    dispatch(getProducts()); // получаем и присваеваем массив продуктов\n  }, [dispatch]);\n\n  useEffect(() => {\n    dispatch(setProductId(+params.id)); // сохранение id карточки\n    // eslint-disable-next-line\n  }, []);\n\n  if (productInfo)\n    return (\n      <div className=\"card\">\n        <img\n          src={\n            productInfo[0]?.pictureUrl ? productInfo[0]?.pictureUrl : Emptyimg\n          }\n          alt=\"\"\n        />\n        <div className=\"card__info\">\n          <h1 className=\"card__name\">{productInfo[0]?.name}</h1>\n          <p className=\"card__description\">{productInfo[0]?.description}</p>\n          <div className=\"card__order-info\">\n            <div className=\"card__price-info\">\n              <p>\n                <span className=\"card__price_price-data\">\n                  {productInfo[0]?.price} ₽ /\n                </span>\n                <span className=\"card__price_weight-data\">\n                  {productInfo[0]?.dishWeight.length !== 1\n                    ? `${productInfo[0]?.dishWeight} г.`\n                    : `${productInfo[0]?.dishWeight} шт.`}\n                </span>\n              </p>\n              <OrderButton />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  else <h1>Продукт не найден....</h1>;\n});\n\nexport default Card;\n","import \"./InsideProductCard.scss\";\nimport React from \"react\";\nimport ProductHeader from \"./ProductHeader/ProductHeader\";\nimport Card from \"./Card/Card\";\n\nconst InsideProductCard = React.memo(({ userEmail, setLoggedData }) => {\n  return (\n    <div className=\"product\">\n      <ProductHeader userEmail={userEmail} setLoggedData={setLoggedData} />\n      <Card />\n    </div>\n  );\n});\nexport default InsideProductCard;\n"],"names":["userEmail","setLoggedData","price","useSelector","state","basket","productAmount","className","to","length","src","Basket","alt","LogoutButton","React","params","useParams","dispatch","useDispatch","productInfo","product","menuList","filter","item","id","useEffect","getProducts","setProductId","pictureUrl","Emptyimg","name","description","dishWeight","OrderButton"],"sourceRoot":""}